<div class="floating-cta" data-floating-cta>
  <div class="floating-cta__container">
    <div class="floating-cta__info">
      {% if product.featured_media %}
        <div class="floating-cta__image">
          {{ product.featured_media | image_url: width: 100 | image_tag:
            loading: 'lazy',
            width: 50,
            height: 50,
            alt: product.title | escape
          }}
        </div>
      {% endif %}
      <div class="floating-cta__details">
        <div class="floating-cta__title">{{ product.title }}</div>
        <div class="floating-cta__price">
          {{ product.selected_or_first_available_variant.price | money }}
          {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
            <span class="floating-cta__compare-price">{{ product.selected_or_first_available_variant.compare_at_price | money }}</span>
          {% endif %}
        </div>
      </div>
    </div>
    
    <div class="floating-cta__actions">
      {% if product.has_only_default_variant %}
        <button type="button" class="floating-cta__button" data-add-to-cart>
          <span>Ajouter au panier</span>
        </button>
      {% else %}
        <a href="#" class="floating-cta__button" data-scroll-to-options>
          <span>Choisir les options</span>
        </a>
      {% endif %}
    </div>
  </div>
</div>

<style>
  .floating-cta {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--color-background);
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.08);
    padding: 1rem 0;
    z-index: 100;
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .floating-cta.is-visible {
    transform: translateY(0);
  }

  .floating-cta__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 2rem;
  }

  .floating-cta__info {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .floating-cta__image {
    width: 50px;
    height: 50px;
    border-radius: 0.5rem;
    overflow: hidden;
    flex-shrink: 0;
  }

  .floating-cta__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .floating-cta__title {
    font-weight: 600;
    margin-bottom: 0.25rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px;
  }

  .floating-cta__price {
    font-weight: 700;
    color: var(--color-primary);
    font-size: 1.1rem;
  }

  .floating-cta__compare-price {
    text-decoration: line-through;
    font-size: 0.875rem;
    color: var(--color-foreground);
    opacity: 0.7;
    margin-left: 0.5rem;
  }

  .floating-cta__button {
    background: var(--color-primary);
    color: white;
    border: none;
    border-radius: 0.5rem;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    transition: all 0.2s ease;
    white-space: nowrap;
  }

  .floating-cta__button:hover {
    background: var(--color-primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 749px) {
    .floating-cta__container {
      padding: 0 1rem;
    }
    
    .floating-cta__title {
      max-width: 150px;
      font-size: 0.875rem;
    }
    
    .floating-cta__button {
      padding: 0.6rem 1rem;
      font-size: 0.875rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const floatingCta = document.querySelector('[data-floating-cta]');
    if (!floatingCta) return;

    // Afficher le CTA après un certain défilement
    const showCtaOnScroll = () => {
      const scrollPosition = window.scrollY;
      const windowHeight = window.innerHeight;
      const documentHeight = document.documentElement.scrollHeight;
      const scrollPercentage = (scrollPosition / (documentHeight - windowHeight)) * 100;
      
      // Afficher le CTA après avoir défilé de 30% de la page
      if (scrollPercentage > 30) {
        floatingCta.classList.add('is-visible');
      } else {
        floatingCta.classList.remove('is-visible');
      }
    };

    // Gestion du clic sur le bouton d'ajout au panier
    const addToCartButton = floatingCta.querySelector('[data-add-to-cart]');
    if (addToCartButton) {
      addToCartButton.addEventListener('click', function(e) {
        e.preventDefault();
        // Ici, vous devriez ajouter la logique d'ajout au panier
        // Par exemple : document.querySelector('form[action="/cart/add"]').submit();
        
        // Animation de confirmation
        this.textContent = 'Ajouté !';
        setTimeout(() => {
          this.innerHTML = 'Ajouter au panier';
        }, 2000);
      });
    }

    // Gestion du clic sur "Choisir les options"
    const scrollToOptions = floatingCta.querySelector('[data-scroll-to-options]');
    if (scrollToOptions) {
      scrollToOptions.addEventListener('click', function(e) {
        e.preventDefault();
        const productForm = document.querySelector('form[action="/cart/add"]');
        if (productForm) {
          productForm.scrollIntoView({ behavior: 'smooth' });
        }
      });
    }

    // Écouter l'événement de défilement
    window.addEventListener('scroll', showCtaOnScroll);
    
    // Vérifier la position au chargement
    showCtaOnScroll();
  });
</script>
